<Styles
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Avalonia.Controls.Ribbon;assembly=Avalonia.Controls.Ribbon">
  <Design.PreviewWith>
  <Grid Height="90" Width="90">
    <local:RibbonGroupBox>
      <local:RibbonButton Size="Large"/>
    </local:RibbonGroupBox>
  </Grid>
  </Design.PreviewWith>

  <Style Selector="local|RibbonGroupBox">
    <Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderMidBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}" />
    <Setter Property="BorderThickness" Value="{DynamicResource ThemeBorderThickness}"/>
    <Setter Property="Template">
      <ControlTemplate TargetType="local:RibbonGroupBox">
        <DockPanel>
          <Border
              Width="1"
              Margin="5,0"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              DockPanel.Dock="Right" />
          <LayoutTransformControl Classes="LayoutInvert">
            <!--ItemContainerGenerator="{TemplateBinding ItemContainerGenerator}"-->
            <Grid Name="ContentsGrid"
                ColumnDefinitions="*,14"
                RowDefinitions="*,14">
              <ItemsPresenter Name="PART_ItemsPresenter" Items="{TemplateBinding Items}" ItemsPanel="{TemplateBinding ItemsPanel}" ItemTemplate="{TemplateBinding ItemTemplate}" Margin="{TemplateBinding Padding}" Grid.ColumnSpan="2"/>
              <!--TextBlock Grid.Column="0" Grid.Row="1"
                         TextAlignment="Center"
                  HorizontalAlignment="Stretch"
                  FontSize="11"
                  FontWeight="DemiBold"
                  Text="{TemplateBinding Text}" /-->
              <ContentPresenter Name="PART_HeaderPresenter" TextBlock.FontSize="11" Grid.Column="0" Grid.Row="1"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Content="{TemplateBinding Header}" TextBlock.Foreground="{TemplateBinding Foreground}"/>
              <Button Grid.Column="1" Grid.Row="1"
                  Name="commandButton"
                  Width="15"
                  Height="15"
                  HorizontalAlignment="Right"
                  Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}">
                <Button.IsVisible>
                  <Binding Path="!Command" Mode="OneWay" RelativeSource="{RelativeSource Mode=TemplatedParent}">
                    <Binding.Converter>
                      <local:IsNullConverter/>
                    </Binding.Converter>
                  </Binding>
                </Button.IsVisible>
                <Border>
                  <Grid Width="9" Height="9">
                    <Border BorderBrush="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" BorderThickness="1,1,0,0"/>
                    <Line StartPoint="0,0" EndPoint="6,6" HorizontalAlignment="Right" VerticalAlignment="Bottom" Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="1"/>
                    <Border BorderBrush="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" BorderThickness="0,0,1,1" Width="4" Height="4" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                  </Grid>
                </Border>
              </Button>
            </Grid>
          </LayoutTransformControl>
        </DockPanel>
      </ControlTemplate>
    </Setter>
    <Setter Property="ItemsPanel">
      <ItemsPanelTemplate>
        <WrapPanel Name="ItemsWrapPanel"/>
        <!--Orientation="{Binding Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:Ribbon}}}"-->
      </ItemsPanelTemplate>
    </Setter>
  </Style>
  <Style Selector="local|Ribbon[Orientation=Horizontal] local|RibbonGroupBox /template/ WrapPanel#ItemsWrapPanel">
    <Setter Property="Orientation" Value="Vertical"/>
  </Style>
  <Style Selector="local|Ribbon[Orientation=Vertical] local|RibbonGroupBox /template/ WrapPanel#ItemsWrapPanel">
    <Setter Property="Orientation" Value="Horizontal"/>
  </Style>
  <Style Selector="local|Ribbon[Orientation=Horizontal] local|RibbonGroupBox">
    <Setter Property="Padding" Value="0,2"/>
  </Style>
  <Style Selector="local|Ribbon[Orientation=Vertical] local|RibbonGroupBox">
    <Setter Property="Padding" Value="2,0"/>
  </Style>
  <Style Selector="local|Ribbon[Orientation=Vertical] local|RibbonGroupBox /template/ LayoutTransformControl.LayoutInvert">
    <Setter Property="Margin" Value="0,0,0,2"/>
    <Setter Property="LayoutTransform">
      <RotateTransform Angle="90"/>
    </Setter>
  </Style>
  <Style Selector="local|Ribbon[Orientation=Horizontal] local|RibbonGroupBox /template/ LayoutTransformControl.LayoutInvert">
    <Setter Property="LayoutTransform">
      <RotateTransform Angle="0"/>
    </Setter>
  </Style>
    <Style Selector="local|RibbonGroupBox /template/ Button#commandButton">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
  </Style>
  <Style Selector="local|RibbonGroupBox /template/ Button#commandButton:pointerover">
    <Setter Property="Background" Value="{DynamicResource ThemeControlMidBrush}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderMidBrush}"/>
  </Style>
  <!--Style Selector="local|RibbonGroupBox /template/ Button#commandButton:pointerover /template/ ContentPresenter">
    <Setter Property="Background" Value="{DynamicResource HoveredBackgroundColorBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource HoveredBorderBackgroundColorBrush}" />
  </Style>
  <Style Selector="local|RibbonGroupBox /template/ Button#commandButton:pressed  /template/ ContentPresenter">
    <Setter Property="Background" Value="{DynamicResource ClickedBackgroundColorBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ClickedBorderBackgroundColorBrush}" />
  </Style>
  <Style Selector="local|RibbonGroupBox /template/ Button#commandButton:disabled">
    <Setter Property="Opacity" Value="{DynamicResource ThemeDisabledOpacity}" />
  </Style-->
  <!--Style Selector="local|RibbonGroupBox[Command={x:Null}] /template/ Button#commandButton">
    <Setter Property="IsVisible" Value="False" />
  </Style>
  <Style Selector="local|RibbonGroupBox[Command={x:Null}] /template/ ContentPresenter#PART_HeaderPresenter">
    <Setter Property="Grid.ColumnSpan" Value="2" />
  </Style-->
</Styles>